<!DOCTYPE html>
<html lang="FR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{'config-pannel' | trans}}</title>
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('styles/admin-pannel.css') }}">
    <link rel="icon" href="{{ asset('styles/img/logo.jpg') }}" type="image/jpg">

    <!-- ROGNAGE D'IMAGES -->
    <link href="https://unpkg.com/cropperjs/dist/cropper.min.css" rel="stylesheet">
    <script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
</head>

<body>
<div class="notification"></div>

<div class="form-container">
    <aside class="sidebar">
        <div class="sidebar-header">
            <h2>{{'config-pannel' | trans}}</h2>
        </div>
        <ul class="sidebar-links">
            <li>
                <a href="#mangas">
                    <i class='bx bx-list-ul' ></i>{{'manga-list' | trans}}
                </a>
            </li>
            <li>
                <a href="#users">
                    <i class='bx bxs-user-detail' ></i>{{'user-list' | trans}}
                </a>
            </li>
            <li>
                <a href="#orders">
                    <i class='bx bx-cart-alt'></i>{{'order-list' | trans}}
                </a>
            </li>
            <li>
                <a href="#chiffres">
                    <i class='bx bxs-dollar-circle'></i>{{'turnover' | trans}}
                </a>
            </li>
            <li>
                <a href="#graph">
                    <i class='bx bx-line-chart'></i>{{'evolution' | trans}}
                </a>
            </li>
            <li>
                <a href="/manga-form">
                    <i class='bx bxs-plus-circle'></i>{{'manga-form' | trans}}
                </a>
            </li>
            <li>
                <a href="/home" class="sidebar-home-link">
                    <i class='bx bxs-arrow-from-right'></i>{{ 'tab6_title' | trans }}
                </a>
            </li>
        </ul>
            
    </aside>

    <div class="col col-1"></div>
    <div class="col col-2">
        <div class="user-info active" data-section="mangas">
            <div id="cart-items-container">
                <div class="form-title">
                    <span>{{'manga-list' | trans}}</span>
                </div>
                {% for manga in mangas %}
                    <div class="basket-item" data-item-id="{{ manga.id }}">
                        <img src="{{ asset('images/Manga/' ~ manga.image.url) }}" alt="Article" class="item-img">
                        <span class="item-name">{{ manga.name }}</span>
                        <a href="{{ path('manga_form', {'id': manga.id}) }}" class="action-btn modify">{{'modify-button' | trans}}</a>

                        <form action="{{ path('delete_manga', {'id': manga.id}) }}" method="post" style="display:inline;">
                            <!-- Pour simuler une requête DELETE via un formulaire POST -->
                            <input type="hidden" name="_method" value="DELETE">
                            <button type="submit" class="action-btn remove" onclick="return confirmDelete()">{{'delete-button' | trans}}</button>                        
                        </form>

                        <!-- Boutons pour diminuer et augmenter la quantité -->
                        <span class="item-quantity" data-item-id="{{ manga.id }}">Stock : {{ manga.stock }}</span>

                        <!-- Affichage du prix total pour cet article -->
                        <span class="item-price" data-item-id="{{ manga.id }}" data-price="{{manga.price}}">
                        </span>
                    </div>
                {% endfor %}
            </div>
        </div>
        <div class="user-info" data-section="users">
            <div class="form-title">
                <span>{{'user-list' | trans}}</span>
            </div>
            {% for user in users %}
                {% if user.profilePicture %}
                    {% set profilePicturePath = user.profilePicture.path %}
                {% else %}
                    {% set profilePicturePath = "pp/default.png" %}
                {% endif %}
                <div class="basket-item" data-item-id="{{ user.id }}">
                    <img src="{{ asset(profilePicturePath) }}" alt="Article" class="item-img">
                    <span class="item-name">{{ user.name }}</span>
                        
                    {% if not user.role %}
                        <!--<button class="action-btn remove">Suspendre</button>-->
                    {% endif %}     
                </div>
            {% endfor %}
        </div>
        <div class="user-info" data-section="orders">
            <div class="form-title">
                <span>{{'order-list' | trans}}</span>
            </div>
            {% for order in orders_list %}
                <!-- Conteneur de la commande -->
                <div class="basket-item" data-item-id="{{ order.id }}">
                    <span class="item-name">{{ order.reference }}</span>
                    <span class="item-name">{{ order.user.name }}</span>
                    <span class="item-name">{{ order.createdAt|date('Y-m-d') }}</span>
                    <span class="item-name">{{ order.status.value }}</span>
                    {# Calcul du prix total de la commande en additionnant product_price de chaque orderItem #}
                    {% set totalPrice = 0 %}
                    {% for item in order.orderItems %}
                        {% set totalPrice = totalPrice + item.productPrice %}
                    {% endfor %}
                    
                    <span class="item-name">{{ totalPrice }} €</span> <!-- Affichage du prix total -->
                    <button class="quantity-btn plus" data-order-id="{{ order.id }}"><i class='bx bxs-down-arrow'></i></button>
                </div>

                <!-- Conteneur des articles de la commande -->
                <div class="order-items" id="items-{{ order.id }}" style="display: none;">
                    {% for item in order.orderItems %}
                        <div class="basket-item order-item">
                            <img src="{{ asset('images/Manga/' ~ item.manga.image.url) }}" alt="{{ item.manga.name }}" class="item-img">
                            <span class="item-name-details">{{ item.manga.name }}</span>
                            <span class="item-quantity-details">{{'quantity' | trans}} : {{ item.quantity }}</span>
                            <span class="item-price-details">{{'price' | trans}} {{ item.productPrice }} €</span>
                        </div>
                    {% endfor %}
                </div>
            {% endfor %}
        </div>

        <div class="user-info" data-section="chiffres">
            <div class="form-title">
                <span>{{'turnover' | trans}}</span>
            </div>
            {% for monthData in salesData %}
                <div class="basket-item">
                    <span class="item-name">{{'month' | trans}} : {{ monthData.month }}</span>
                    <span class="item-name">{{'total-amount' | trans}} : {{ monthData.total|number_format(2, ',', ' ') }} €</span>
                    <span class="item-name">{{'separate-sold' | trans}} : {{ monthData.distinctMangasSold }}</span>
                    <button class="quantity-btn plus-bis" data-month="{{ monthData.month }}"><i class='bx bxs-down-arrow'></i></button>
                </div>

                <!-- Conteneur des détails des mangas vendus -->
                <div class="order-items" id="items-{{ monthData.month }}" style="display: none;">
                    <p>{{'order-details'}} {{ monthData.month }} :</p>
                    {% for item in monthData.items %}
                        <div class="basket-item order-item">
                            <img src="{{ asset('images/Manga/' ~ item.image) }}" alt="{{ item.name }}" class="item-img">
                            <span class="item-name-details">{{ item.name }}</span>
                            <span class="item-quantity-details">{{'quantity' | trans}} : {{ item.quantity }}</span>
                            <span class="item-price-details">{{'price' | trans}} {{ item.productPrice|number_format(2, ',', ' ') }} €</span>
                        </div>
                    {% endfor %}
                </div>
            {% endfor %}
        </div>
        <div class="user-info" data-section="graph">
            <div class="form-title">
                <span>{{'evolution' | trans}}</span>
            </div>
            <div class="chart">
                <svg></svg> <!-- Le graphique sera dessiné ici -->
            </div>

            <script>
                // Récupérer les labels et les données transmises depuis Twig
                const chartLabels = {{ chartLabels|json_encode()|raw }};
                const chartData = {{ chartData|json_encode()|raw }};

                // Dimensions du graphique
                const margin = { top: 20, right: 30, bottom: 40, left: 40 };
                const width = 800 - margin.left - margin.right;
                const height = 400 - margin.top - margin.bottom;

                // Créer un élément SVG pour dessiner le graphique
                const svg = d3.select("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                    .append("g")
                    .attr("transform", `translate(${margin.left},${margin.top})`);

                // Créer des échelles (scales) pour les axes
                const x = d3.scaleBand()
                    .domain(chartLabels)
                    .range([0, width])
                    .padding(0.1);

                const y = d3.scaleLinear()
                    .domain([0, d3.max(chartData)])
                    .nice()
                    .range([height, 0]);

                // Ajouter un fond au graphique (rectangle sous les axes et courbe)
                svg.append("rect")
                    .attr("width", width)
                    .attr("height", height)
                    .attr("fill", "rgba(255, 255, 255, 0.1)"); // Fond gris clair pour le graphique

                // Ajouter l'axe X
                svg.append("g")
                    .selectAll(".tick")
                    .data(chartLabels)
                    .enter()
                    .append("text")
                    .attr("x", (d, i) => x(d) + x.bandwidth() / 2)
                    .attr("y", height)
                    .attr("dy", "1.2em")
                    .attr("text-anchor", "middle")
                    .text(d => d)
                    .style("font-size", "8px")   // Réduire la taille de la police des dates
                    .style("fill", "white");

                // Ajouter l'axe Y avec des labels blancs
                const yAxis = svg.append("g")
                    .call(d3.axisLeft(y));
                
                // Style de l'axe Y : changer la couleur des ticks et des labels en blanc
                yAxis.selectAll("text")
                    .style("fill", "white");
                
                yAxis.selectAll("line")
                    .style("stroke", "white"); // Couleur des lignes de l'axe Y

                // Ajouter la ligne de données (graphique linéaire)
                const line = d3.line()
                    .x((d, i) => x(chartLabels[i]) + x.bandwidth() / 2)
                    .y(d => y(d));

                svg.append("path")
                    .data([chartData])
                    .attr("class", "line")
                    .attr("d", line)
                    .attr("fill", "none")
                    .attr("stroke", "white") // Tracé de la courbe en blanc
                    .attr("stroke-width", 2);

                // Ajouter des labels avec les valeurs à chaque point de la courbe
                svg.selectAll(".dot")
                    .data(chartData)
                    .enter()
                    .append("text")
                    .attr("x", (d, i) => x(chartLabels[i]) + x.bandwidth() / 2)
                    .attr("y", (d) => y(d) - 10) // Positionner le texte au-dessus de chaque point
                    .attr("text-anchor", "middle")
                    .style("fill", "white")
                    .style("font-size", "10px")
                    .text(d => d); // Afficher la valeur du point
            </script>   
        </div>
    </div>
</div>
{% if suppr %}
    <script>
        alert('le manga à été supprimé avec succès');
    </script>
{% endif %}
{% if error is not empty %}
    <script>
        alert("{{ error|escape('js') }}");
    </script>
{% endif %}
<script src="{{ asset('script/admin-pannel.js') }}"></script>

</body>
{% include 'partials/footer.html.twig' %}




